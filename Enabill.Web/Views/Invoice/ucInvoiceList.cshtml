@model Enabill.Web.Models.InvoiceIndexModel
@{
    var columnCount = 10;
    var moveButtonColSpan = (columnCount + Model.AllowedInvoiceStatusTypes.Count) - 2;
    var moveButtonText = $"Move to {string.Join(", ", Model.AllowedInvoiceStatusTypes.Select(t => t.ToString()))}";
}

<div id="invoiceListingDiv">
    <table class="general fullWidth">
        <tr>
            <th style="width:5%">
                Status
            </th>
            @if (Model.AllowedInvoiceStatusTypes.Count > 0)
            {
                foreach (var n in Model.AllowedInvoiceStatusTypes)
                {
                    <th style="width:1%">
                        &nbsp;
                    </th>
                }
            }
            <th style="width:6%">
                Invoice No
            </th>
            @*<th>
                    Department Code
                </th>*@
            @*<th>
                    GL Account Code
                </th>*@
            <th style="width:8%">
                Inv Date
            </th>
            <th style="width:10%">
                Type
            </th>
            @*<th>
                    Acc Ref
                </th>*@
            <th style="width:48%">
                Order No.
            </th>
            @*<th class="center">
                    Prov Accrual
                </th>*@
            @*<th class="center">
                    Prov Income
                </th>*@
            @*<th class="center">
                    Est Total
                </th>*@
            @*<th class="center">
                    Accrual Val (Excl)
                </th>*@
        <th class="center" style="width:6%">
            Inv Val (Excl)
        </th>
            <th style="width:6%">
                Attach TimeSheets
            </th>
            <th style="width:6%">
                Print Invoice
            </th>
            <th style="width:6%">
                Print TimeSheets
            </th>
        </tr>
        @if (Model.ClientInvoices.Where(m => m.Invoices.Count() > 0).Count() == 0)
        {
            <tr>
                <td class="center" colspan="10">
                    <h2 style="margin: 5px; padding: 0px;">
                        No invoices found with the current search criteria
                    </h2>
                </td>
            </tr>
        }
        @foreach (var client in Model.ClientInvoices.Where(m => m.Invoices.Count() > 0))
        {
            <tr>
                <th colspan="6">
                    @client.Client.ClientName   &nbsp; - &nbsp; @client.Client.AccountCode
                </th>
                @*<th class="right">
                        @client.ProvisionalAccrualTotal.ToDoubleString()
                    </th>*@
                @*<th class="right">
                        @client.AccrualExclTotal.ToDoubleString()
                    </th>*@
                <th class="right">
                    <span>@client.InvoiceExclTotal.ToDoubleString()</span>
                </th>
                <th colspan="3">
                </th>
            </tr>
            foreach (var i in client.Invoices)
            {
                var invoiceStatusCheckStatus = false;

                if (i.IsTimeApproved && i.ProvisionalNettAmount > 0)
                {
                    invoiceStatusCheckStatus = true;
                }
                <tr>
                    <td class="@((Enabill.InvoiceStatusType)i.InvoiceStatusID)">
                        @*@((Enabill.InvoiceStatusType)i.InvoiceStatusID)*@
                        @Enabill.Extensions.GetEnumDescriptionById((Enabill.InvoiceStatusType)i.InvoiceStatusID)
                    </td>
                    @if (Model.AllowedInvoiceStatusTypes.Count > 0)
                    {
                        <td>
                            @foreach (var n in i.NextAllowableInvoiceStatusType)
                            {
                                var inputValue = $"{i.InvoiceID}|{(int)n}|{client.Client.ClientID}";
                                if (Model.AllowedInvoiceStatusTypes.Where(a => a == n).Any())
                                {
                                    if (invoiceStatusCheckStatus)
                                    {
                                        <input type="checkbox" name="InvoiceStatusType" value="@inputValue" />
                                    }
                                    else
                                    {
                                        <input type="checkbox" name="InvoiceStatusType" value="@inputValue" disabled />
                                    }
                                }
                            }
                        </td>
                    }
                    <td>
                        @*Change color of link if outstanding work approvals*@
                        @if (i.IsTimeApproved)
                        {
                            @Html.ActionLink(i.InvoiceID.ToString(), "Edit", new { id = i.InvoiceID }, new { target = "_blank" })
                        }
                        else
                        {
                            @Html.ActionLink(i.InvoiceID.ToString(), "Edit", new { id = i.InvoiceID }, new { @class = "actionlinkclass", target = "_blank" })
                        }
                    </td>
                    @*<td>

                            @if (i.ClientDepartmentCodeID != null)
                            {
                                foreach (var c in Model.ClientDepartmentCode)
                                {
                                    if (c.ClientDepartmentCodeID == i.ClientDepartmentCodeID)
                                    {
                                        @Model.ClientDepartmentCode.Where(s => s.ClientDepartmentCodeID == i.ClientDepartmentCodeID).SingleOrDefault().DepartmentCode;
                                    }
                                }
                            }
                        </td>*@
                    @*<td>
                            @if (i.GLAccountID != null)
                            {
                                foreach (var b in Model.GLAccountCode)
                                {
                                    if (b.GLAccountID == i.GLAccountID)
                                    {
                                        @Model.GLAccountCode.Where(s => s.GLAccountID == i.GLAccountID).SingleOrDefault().GLAccountCode;
                                    }
                                }
                            }
                        </td>*@
                    <td>
                        @i.InvoiceDate.ToDisplayString()
                    </td>
                    <td class="@((Enabill.BillingMethodType)i.BillingMethodID)">
                        @*@((Enabill.BillingMethodType)i.BillingMethodID)*@
                        @Enabill.Extensions.GetEnumDescriptionById((Enabill.BillingMethodType)i.BillingMethodID)
                    </td>
                    @*<td>
                            @i.OurRef
                        </td>*@
                    <td>
                        @*@i.OrderNo*@
                        @if (i.InvoiceRule != null && !string.IsNullOrEmpty(i.InvoiceRule.Description))
                        {
                            <span>@i.InvoiceRule.Description</span>
                        }
                        else
                        {
                            <span>&nbsp;</span>
                        }
                    </td>
                    @*<td class="right">
                            @i.ProvisionalAccrualAmount.ToDoubleString()
                        </td>*@
                    @*<td class="right">
                            @i.ProvisionalIncomeAmount.ToDoubleString()
                        </td>*@
                    @*<td class="right">
                            @i.ProjectedAmountExcl.ToDoubleString()
                        </td>*@
                    @*<td class="right">
                            @i.AccrualExclVAT.ToDoubleString()
                        </td>*@
                    <td class="right">
                        @if (i.InvoiceAmountExclVAT > 0)
                        {
                            <span>@i.InvoiceAmountExclVAT.ToDoubleString()</span>
                        }
                        else
                        {
                            <span>
                                @i.ProvisionalNettAmount.ToDoubleString()
                            </span>
                        }
                    </td>

                    <td width="2%" class="center">
                        @if (i.PrintTimeSheet)
                        {
                            <img src="../../Content/Img/timesheet_approved_20x20.png" style="width:16px;" />
                        }
                        else
                        {
                            <img src="../../Content/Img/timesheet_reject_20x20.png" style="width:16px;" />

                        }
                    </td>
                    <td class="center">
                        <a href="/Invoice/PrintPdf/@i.InvoiceID">
                            <img src="../../Content/Img/PrintPdf.png" />
                        </a>
                    </td>
                    <td class="center">
                        <a href="/Invoice/PrintTimeSheet/@i.InvoiceID">
                            <img src="../../Content/Img/PrintPdf.png" />
                        </a>
                    </td>
                </tr>
            }
        }
        @if (Model.AllowedInvoiceStatusTypes.Count > 0)
        {
            if (Model.ClientInvoices.Where(m => m.Invoices.Count() > 0).Count() > 0)
            {
                <tr>
                    <td>&nbsp;</td>
                    @foreach (var n in Model.AllowedInvoiceStatusTypes)
                    {
                        int invoiceStatusType = (int)n;
                        <td>
                            <input type="checkbox" name="InvoiceStatusTypeToggle" value="@invoiceStatusType" />
                        </td>
                    }
                    <td colspan="@moveButtonColSpan">

                        <input type="button" value="@moveButtonText" onclick="InvoiceIndex.moveInvoices()" />
                    </td>
                </tr>
            }
        }
        <tr>
            <th colspan="6">
                Totals for Period
            </th>
            <th class="right">
                @Model.ClientInvoices.Sum(m => m.ProvisionalAccrualTotal).ToDoubleString()
            </th>
            @*<th class="right">
                    @Model.ClientInvoices.Sum(m => m.ProvisionalIncomeTotal).ToDoubleString()
                </th>
                <th class="right">
                    @Model.ClientInvoices.Sum(m => m.EstimateTotal).ToDoubleString()
                </th>*@
            <th colspan="3" class="right">
                @*@Model.ClientInvoices.Sum(m => m.AccrualExclTotal).ToDoubleString()*@
            </th>
        </tr>
    </table>
</div>
@*
    @foreach(var client in Model.InvoiceClients)
    {
        {
             var list = Model.Invoices.Where(i => i.ClientID == client.ClientID).ToList();
             if (list.Count() == 0)
            {
                 continue;
            }
        }

        <tr>
            <th colspan="10">@client.ClientName</th>
        </tr>

        foreach (var i in Model.Invoices.Where(i => i.ClientID == client.ClientID).ToList())
        {
            <tr>
                <td>
                    @i.InvoiceID
                </td>
                <td>
                    @i.InvoiceDate.ToDisplayString()
                </td>
                <td>
                    @((Enabill.BillingMethodType)i.BillingMethodID)
                </td>
                <td class="@((Enabill.InvoiceStatusType)i.InvoiceStatusID)Class">
                    @((Enabill.InvoiceStatusType)i.InvoiceStatusID)
                </td>
                <td>
                    @i.OurRef
                </td>
                <td>
                    @i.InvoiceAmountExclVAT.ToDoubleString()
                </td>
                <td>
                    @i.InvoiceAmountInclVAT.ToDoubleString()
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id= i.InvoiceID }, null)
                </td>
            </tr>
        }

    }
    </table>
*@