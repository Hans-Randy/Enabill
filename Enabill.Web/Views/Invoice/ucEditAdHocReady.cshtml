@model Enabill.Web.Models.InvoiceEditAdHoc

<form id="InvoiceForm" method="post">
    @Html.Hidden("InvoiceID", Model.Invoice.InvoiceID)
    @Html.Hidden("InvoiceStatusID", Model.Invoice.InvoiceStatusID)
    @Html.Hidden("BillingMethodID", Model.Invoice.BillingMethodID)
    @Html.Hidden("InvoiceStatus", (Enabill.InvoiceStatusType)Model.Invoice.InvoiceStatusID)
    @Html.Hidden("DeletedLines", string.Empty)
    @Html.Hidden("ClientID", Model.Invoice.ClientID)
    @Html.Hidden("ContactID", Model.Invoice.InvoiceContactID)
    @Html.Hidden("ContactList")
    @Html.Hidden("InvoiceIsTimeApproved", Model.Invoice.IsTimeApproved)
    @Html.Hidden("ProjectID", Model.Invoice.ProjectID)
    @Html.Hidden("InvoiceSubCategoryID", Model.Invoice.InvoiceSubCategoryID)
    @Html.Hidden("DateFrom", Model.Invoice.DateFrom)
    @Html.Hidden("DateTo", Model.Invoice.DateTo)
    @Html.Hidden("IsInternal", Model.Invoice.IsInternal)
    @Html.Hidden("InvoiceDate", Model.Invoice.InvoiceDate)

    <table class="subTable general fullWidth">
        <tr>
            <td valign="top" align="left" style="width: 35%;">
                <h2>
                    Invoice Detail
                </h2>
                @*<form id="RuleSetup" method="post">*@
                <div id="RuleSetup" method="post">
                    <table class="general fullWidth">
                        <tr>
                            <th>
                                Status
                            </th>
                            <td>
                                @((Enabill.InvoiceStatusType)Model.Invoice.InvoiceStatusID)
                            </td>
                        </tr>
                        <tr>
                            <th>
                                Billing Method
                            </th>
                            <td>
                                Ad Hoc
                            </td>
                        </tr>
                        <tr>
                            <th>
                                Client
                            </th>
                            <td>
                                @Model.ClientName
                            </td>
                        </tr>
                        <tr>
                            <th>
                                Project
                            </th>
                            <td>
                                @Model.ProjectName
                            </td>
                        </tr>
                        <tr>
                            <th>
                                Invoice Contact
                            </th>
                            <td>
                                @Model.InvoiceContactName
                            </td>
                        </tr>
                        <tr>
                            <th>
                                Description
                            </th>
                            <td>
                                @Model.Invoice.Description
                            </td>
                        </tr>
                        <tr>
                            <th>
                                Invoice Sub Category
                            </th>
                            <td>
                                @Model.InvoiceSubCategoryName
                            </td>
                        </tr>
                        <tr>
                            <th>
                                Dates Covered By Invoice
                            </th>
                            <td>
                                @Model.Invoice.DateFrom.ToDisplayString()
                                -
                                @Model.Invoice.DateTo.ToDisplayString()
                            </td>
                        </tr>
                        <tr>
                            <th>
                                Is this an internal invoice?
                            </th>
                            <td>
                                @Html.CheckBox("IsInternal", Model.Invoice.IsInternal, new { disabled = "disabled" })
                            </td>
                        </tr>
                        <tr>
                            <th>
                                Order Number
                            </th>
                            <td>
                                @Model.Invoice.OrderNo
                            </td>
                        </tr>
                        <tr>
                            <th>
                                External Ref Number
                            </th>
                            <td>
                                @Html.TextBox("ExternalInvoiceNo", Model.Invoice.ExternalInvoiceNo)
                            </td>
                        </tr>
                        <tr>
                            <th>
                                Invoice Date to Display on Invoice
                            </th>
                            <td>
                                @Model.Invoice.InvoiceDate.ToDisplayString()
                            </td>
                        </tr>
                        <tr>
                            <th>
                                Invoice Period
                            </th>
                            <td>
                                @Model.Invoice.Period
                            </td>
                        </tr>
                        <tr>
                            <th>
                                Invoice Amount Excl @Model.Invoice.Client.GetCurrency(Model.Invoice.Client.CurrencyTypeID).CurrencyISO
                            </th>
                            <td>
                                @Model.Invoice.InvoiceAmountExclVAT.ToDoubleString()
                            </td>
                        </tr>
                        <tr>
                            <th>
                                Accrual Amount Excl @Model.Invoice.Client.GetCurrency(Model.Invoice.Client.CurrencyTypeID).CurrencyISO
                            </th>
                            <td>
                                @Model.Invoice.AccrualExclVAT.ToDoubleString()
                            </td>
                        </tr>
                        <tr>
                            <th>
                                VAT Rate %
                            </th>
                            <td>
                                @(Model.Invoice.VATRate)
                            </td>
                        </tr>
                        <tr>
                            <th>
                                VAT Amount @Model.Invoice.Client.GetCurrency(Model.Invoice.Client.CurrencyTypeID).CurrencyISO
                            </th>
                            <td>
                                @Model.Invoice.VATAmount.ToDoubleString()
                            </td>
                        </tr>
                        <tr>
                            <th>
                                Invoice Amount Inclusive @Model.Invoice.Client.GetCurrency(Model.Invoice.Client.CurrencyTypeID).CurrencyISO
                            </th>
                            <td>
                                @Model.Invoice.InvoiceAmountInclVAT.ToDoubleString()
                            </td>
                        </tr>
                        <tr style="display:none">
                            <th>
                                Client Department Code
                            </th>
                            <td>
                                @Html.DropDownList("ClientDepartmentCodeID")
                            </td>
                        </tr>
                        <tr style="display:none">
                            <th>
                                GL Account Code
                            </th>
                            <td>
                                @Html.DropDownList("GLAccountID")
                            </td>
                        </tr>
                        <tr>
                            <th>
                                Print Option
                            </th>
                            <td>
                                @Html.DropDownList("PrintOptionTypeID")
                            </td>
                        </tr>
                        <tr>
                            <th>Layout Option</th>
                            <td>@Html.DropDownList("PrintLayoutTypeID")</td>
                        </tr>
                        <tr>
                            <th>
                                Attach TimeSheets To Invoice
                            </th>
                            <td>
                                @Html.CheckBox("PrintTimeSheet", Model.Invoice.PrintTimeSheet)
                            </td>
                        </tr>
                        <tr>
                            <th>
                                Print Credits
                            </th>
                            <td>
                                @Html.CheckBox("PrintCredits", Model.Invoice.PrintCredits)
                            </td>
                        </tr>
                    </table>
                    <br />
                    <br />
                    <input type="button" value="Save" onclick="AdHocInvoice.save();" />
                    @if (Model.Invoice.CanBeMovedToOpen)
                    {
                        <input type="button" onclick="Invoice.moveToOpen(); return false;" value="Move Invoice to 'Open'" />
                    }
                    @if (Model.Invoice.CanBeMovedToInProgress)
                    {
                        <input type="button" onclick="Invoice.moveToInProgress(); return false;" value="Move Invoice to 'In Progress'" />
                    }
                    @if (Model.Invoice.CanBeMovedToReady)
                    {
                        <input type="button" onclick="Invoice.moveToReady(); return false;" value="Move Invoice to 'Ready'" />
                    }
                    @if (Model.Invoice.CanBeMovedToComplete)
                    {
                        //TODO - Client account code may need to be updated for user to see this button
                        <input type="button" onclick="Invoice.moveToComplete(); return false;" value="Move Invoice to 'Complete'" />
                    }
                    @if (string.IsNullOrEmpty(Model.Invoice.ExternalInvoiceNo))
                    {
                        <br />
                        <text>Invoice cannot be moved to 'Complete' as the External Invoice Number is invalid.</text>
                    }
                    @if (string.IsNullOrEmpty(Model.Invoice.Client.AccountCode))
                    {
                        <br />
                        <text>Invoice cannot be moved to 'Complete' as the account code on </text>@(Model.ClientName)<text> is invalid.</text>
                        <br />
                        <a href="/Client/Edit/@(Model.Invoice.ClientID)" target="_blank">Click here to edit the client</a>
                    }
                </div>
            </td>
            <td valign="top" align="center">
                @*
                    <div id="InvoiceLines">
                        @if (Model.InvoiceLines.Count() > 0)
                        {
                            foreach (var item in Model.InvoiceLines)
                            {
                                @Html.Partial("ucInvoiceLineClosed", item)
                            }
                        }
                        else
                        {
                            <text>This invoice doesn't have any Invoice Lines</text>
                        }
                    </div>
                *@
            </td>
            <td style="width: 40%;" valign="top">
                <h4 class="left">
                    CC Contacts to Receive Invoice
                </h4>
                <div style="width: 100%;">
                    <ul style="list-style: none;">
                        @foreach (var cont in Model.AdHocInvoiceContacts.Where(c => c.IsSelected))
                        {
                            <li>
                                <input class="Contacts" type="checkbox" value="@cont.Contact.ContactID" checked="checked" />@cont.Contact.ContactName
                            </li>
                        }
                        @foreach (var cont in Model.AdHocInvoiceContacts.Where(c => !c.IsSelected))
                        {
                            <li>
                                <input class="Contacts" type="checkbox" value="@cont.Contact.ContactID" />@cont.Contact.ContactName
                            </li>
                        }
                    </ul>
                </div>
            </td>
        </tr>
    </table>
</form>